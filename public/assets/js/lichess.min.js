(() => {
	'use strict'; var e = { "class": "className", contenteditable: "contentEditable", "for": "htmlFor", readonly: "readOnly", maxlength: "maxLength", tabindex: "tabIndex", colspan: "colSpan", rowspan: "rowSpan", usemap: "useMap" }; function g(a, b) { try { return a(b) } catch (c) { return b } }
	var m = document, n = window, aa = m.documentElement, p = m.createElement.bind(m), r = Array.isArray, t = Array.prototype, ba = t.concat, u = t.filter, v = t.indexOf, w = t.map, ca = t.push, y = t.slice, A = t.some, da = t.splice, ea = /^#(?:[\w-]|\\.|[^\x00-\xa0])*$/, fa = /^\.(?:[\w-]|\\.|[^\x00-\xa0])*$/, ha = /<.+>/, ia = /^\w+$/; function B(a, b) { return a && (C(b) || D(b)) ? fa.test(a) ? b.getElementsByClassName(a.slice(1)) : ia.test(a) ? b.getElementsByTagName(a) : b.querySelectorAll(a) : [] }
	var E = function () { function a(a, c) { if (a) { if (a instanceof E) return a; var b = a; if (F(a)) { if (b = (c instanceof E ? c[0] : c) || m, b = ea.test(a) ? b.getElementById(a.slice(1)) : ha.test(a) ? G(a) : B(a, b), !b) return } else if (H(a)) return this.ready(a); if (b.nodeType || b === n) b = [b]; this.length = b.length; a = 0; for (c = this.length; a < c; a++)this[a] = b[a] } } a.prototype.init = function (b, c) { return new a(b, c) }; return a }(), I = E.prototype, J = I.init; J.fn = J.prototype = I; I.length = 0; I.splice = da; "function" === typeof Symbol && (I[Symbol.iterator] = t[Symbol.iterator]);
	I.map = function (a) { return J(ba.apply([], w.call(this, function (b, c) { return a.call(b, c, b) }))) }; I.slice = function (a, b) { return J(y.call(this, a, b)) }; var ja = /-([a-z])/g; function K(a) { return a.replace(ja, function (a, c) { return c.toUpperCase() }) } function L(a, b, c) { if (c) for (c = a.length; c-- && !1 !== b.call(a[c], c, a[c]);); else { c = 0; for (var d = a.length; c < d && !1 !== b.call(a[c], c, a[c]); c++); } return a } J.each = L; I.each = function (a) { return L(this, a) }; I.removeProp = function (a) { return this.each(function (b, c) { delete c[e[a] || a] }) };
	J.guid = 1; function ka(a, b) { var c = a && (a.matches || a.webkitMatchesSelector || a.msMatchesSelector); return !!c && !!b && c.call(a, b) } function M(a) { return !!a && a === a.window } function C(a) { return !!a && 9 === a.nodeType } function D(a) { return !!a && 1 === a.nodeType } function H(a) { return "function" === typeof a } function F(a) { return "string" === typeof a } function la(a) { return !isNaN(parseFloat(a)) && isFinite(a) } J.isWindow = M; J.isFunction = H; J.isNumeric = la; J.isArray = r;
	I.prop = function (a, b) { if (a) { if (F(a)) return a = e[a] || a, 2 > arguments.length ? this[0] && this[0][a] : this.each(function (c, h) { h[a] = b }); for (var c in a) this.prop(c, a[c]); return this } }; I.get = function (a) { if (void 0 === a) return y.call(this); a = Number(a); return this[0 > a ? a + this.length : a] }; I.eq = function (a) { return J(this.get(a)) }; I.first = function () { return this.eq(0) }; I.last = function () { return this.eq(-1) };
	function N(a) { return F(a) ? function (b, c) { return ka(c, a) } : H(a) ? a : a instanceof E ? function (b, c) { return a.is(c) } : a ? function (b, c) { return c === a } : function () { return !1 } } I.filter = function (a) { var b = N(a); return J(u.call(this, function (a, d) { return b.call(a, d, a) })) }; function O(a, b) { return b ? a.filter(b) : a } var ma = /\S+/g; function P(a) { return F(a) ? a.match(ma) || [] : [] } I.hasClass = function (a) { return !!a && A.call(this, function (b) { return D(b) && b.classList.contains(a) }) };
	I.removeAttr = function (a) { var b = P(a); return this.each(function (a, d) { D(d) && L(b, function (a, b) { d.removeAttribute(b) }) }) }; I.attr = function (a, b) { if (a) { if (F(a)) { if (2 > arguments.length) { if (!this[0] || !D(this[0])) return; var c = this[0].getAttribute(a); return null === c ? void 0 : c } return void 0 === b ? this : null === b ? this.removeAttr(a) : this.each(function (c, h) { D(h) && h.setAttribute(a, b) }) } for (c in a) this.attr(c, a[c]); return this } };
	I.toggleClass = function (a, b) { var c = P(a), d = void 0 !== b; return this.each(function (a, f) { D(f) && L(c, function (a, c) { d ? b ? f.classList.add(c) : f.classList.remove(c) : f.classList.toggle(c) }) }) }; I.addClass = function (a) { return this.toggleClass(a, !0) }; I.removeClass = function (a) { return arguments.length ? this.toggleClass(a, !1) : this.attr("class", "") };
	function Q(a, b, c, d) { for (var h = [], f = H(b), l = d && N(d), x = 0, k = a.length; x < k; x++)if (f) { var q = b(a[x]); q.length && ca.apply(h, q) } else for (q = a[x][b]; !(null == q || d && l(-1, q));)h.push(q), q = c ? q[b] : null; return h } function R(a) { return 1 < a.length ? u.call(a, function (a, c, d) { return v.call(d, a) === c }) : a } J.unique = R; I.add = function (a, b) { return J(R(this.get().concat(J(a, b).get()))) }; function S(a, b, c) { if (D(a)) { var d = n.getComputedStyle(a, null); return c ? d.getPropertyValue(b) || void 0 : d[b] || a.style[b] } }
	function T(a, b) { return parseInt(S(a, b), 10) || 0 } var na = /^--/, oa = { opacity: !0, order: !0, zIndex: !0 }; function pa(a, b, c) { void 0 === c && (c = na.test(a)); return c || oa[a] || !la(b) ? b : b + "px" } I.css = function (a, b) { if (F(a)) { var c = na.test(a); if (2 > arguments.length) return this[0] && S(this[0], a, c); if (!a) return this; b = pa(a, b, c); return this.each(function (d, f) { D(f) && (c ? f.style.setProperty(a, b) : f.style[a] = b) }) } for (var d in a) this.css(d, a[d]); return this }; var qa = /^\s+|\s+$/;
	function ra(a, b) { a = a.dataset[b] || a.dataset[K(b)]; return qa.test(a) ? a : g(JSON.parse, a) } I.data = function (a, b) { if (!a) { if (!this[0]) return; var c = {}, d; for (d in this[0].dataset) c[d] = ra(this[0], d); return c } if (F(a)) return 2 > arguments.length ? this[0] && ra(this[0], a) : void 0 === b ? this : this.each(function (c, d) { c = b; c = F(c) ? c : g(JSON.stringify, c); d.dataset[K(a)] = c }); for (d in a) this.data(d, a[d]); return this };
	function sa(a, b) { var c = a.documentElement; return Math.max(a.body["scroll" + b], c["scroll" + b], a.body["offset" + b], c["offset" + b], c["client" + b]) } function ta(a, b) { return T(a, "border" + (b ? "Left" : "Top") + "Width") + T(a, "padding" + (b ? "Left" : "Top")) + T(a, "padding" + (b ? "Right" : "Bottom")) + T(a, "border" + (b ? "Right" : "Bottom") + "Width") }
	L([!0, !1], function (a, b) { L(["Width", "Height"], function (a, d) { I[(b ? "outer" : "inner") + d] = function (c) { if (this[0]) return M(this[0]) ? b ? this[0]["inner" + d] : this[0].document.documentElement["client" + d] : C(this[0]) ? sa(this[0], d) : this[0][(b ? "offset" : "client") + d] + (c && b ? T(this[0], "margin" + (a ? "Top" : "Left")) + T(this[0], "margin" + (a ? "Bottom" : "Right")) : 0) } }) });
	L(["Width", "Height"], function (a, b) { var c = b.toLowerCase(); I[c] = function (d) { if (!this[0]) return void 0 === d ? void 0 : this; if (!arguments.length) return M(this[0]) ? this[0].document.documentElement["client" + b] : C(this[0]) ? sa(this[0], b) : this[0].getBoundingClientRect()[c] - ta(this[0], !a); var h = parseInt(d, 10); return this.each(function (b, d) { D(d) && (b = S(d, "boxSizing"), d.style[c] = pa(c, h + ("border-box" === b ? ta(d, !a) : 0))) }) } }); var U = {};
	I.toggle = function (a) { return this.each(function (b, c) { if (D(c)) if (void 0 === a ? "none" === S(c, "display") : a) { if (c.style.display = c.___cd || "", "none" === S(c, "display")) { b = c.style; c = c.tagName; if (U[c]) c = U[c]; else { var d = p(c); m.body.insertBefore(d, null); var h = S(d, "display"); m.body.removeChild(d); c = U[c] = "none" !== h ? h : "block" } b.display = c } } else c.___cd = S(c, "display"), c.style.display = "none" }) }; I.hide = function () { return this.toggle(!1) }; I.show = function () { return this.toggle(!0) };
	function ua(a, b) { return !b || !A.call(b, function (b) { return 0 > a.indexOf(b) }) } var V = { focus: "focusin", blur: "focusout" }, W = { mouseenter: "mouseover", mouseleave: "mouseout" }, va = /^(mouse|pointer|contextmenu|drag|drop|click|dblclick)/i; function wa(a, b, c, d, h) { var f = a.___ce = a.___ce || {}; f[b] = f[b] || []; f[b].push([c, d, h]); a.addEventListener(b, h) } function X(a) { a = a.split("."); return [a[0], a.slice(1).sort()] }
	function Y(a, b, c, d, h) { var f = a.___ce = a.___ce || {}; if (b) f[b] && (f[b] = f[b].filter(function (f) { var l = f[0], k = f[1]; f = f[2]; if (h && f.guid !== h.guid || !ua(l, c) || d && d !== k) return !0; a.removeEventListener(b, f) })); else for (b in f) Y(a, b, c, d, h) }
	I.off = function (a, b, c) { var d = this; if (void 0 === a) this.each(function (a, b) { (D(b) || C(b) || M(b)) && Y(b) }); else if (F(a)) H(b) && (c = b, b = ""), L(P(a), function (a, h) { a = X(h); h = a[0]; var f = a[1], k = W[h] || V[h] || h; d.each(function (a, d) { (D(d) || C(d) || M(d)) && Y(d, k, f, b, c) }) }); else for (var h in a) this.off(h, a[h]); return this };
	I.on = function (a, b, c, d, h) {
		var f = this; if (!F(a)) { for (var l in a) this.on(l, b, c, a[l], h); return this } F(b) || (void 0 !== b && null !== b && (void 0 !== c && (d = c), c = b), b = ""); H(d) || (d = c, c = void 0); if (!d) return this; L(P(a), function (a, k) {
			a = X(k); k = a[0]; var q = a[1], l = W[k] || V[k] || k, x = k in W, xa = k in V; l && f.each(function (a, f) {
				if (D(f) || C(f) || M(f)) a = function ya(a) {
					if (a.target["___i" + a.type]) return a.stopImmediatePropagation(); if (!a.namespace || ua(q, a.namespace.split("."))) if (b || !(xa && (a.target !== f || a.___ot === l) || x && a.relatedTarget &&
						f.contains(a.relatedTarget))) { var k = f; if (b) { for (var z = a.target; !ka(z, b);) { if (z === f) return; z = z.parentNode; if (!z) return } k = z; a.___cd = !0 } a.___cd && Object.defineProperty(a, "currentTarget", { configurable: !0, get: function () { return k } }); Object.defineProperty(a, "data", { configurable: !0, get: function () { return c } }); z = d.call(k, a, a.___td); h && Y(f, l, q, b, ya); !1 === z && (a.preventDefault(), a.stopPropagation()) }
				}, a.guid = d.guid = d.guid || J.guid++, wa(f, l, q, b, a)
			})
		}); return this
	}; I.one = function (a, b, c, d) { return this.on(a, b, c, d, !0) };
	I.ready = function (a) { function b() { return setTimeout(a, 0, J) } "loading" !== m.readyState ? b() : m.addEventListener("DOMContentLoaded", b); return this }; I.trigger = function (a, b) { if (F(a)) { var c = X(a), d = c[0]; c = c[1]; var h = W[d] || V[d] || d; if (!h) return this; var f = va.test(h) ? "MouseEvents" : "HTMLEvents"; a = m.createEvent(f); a.initEvent(h, !0, !0); a.namespace = c.join("."); a.___ot = d } a.___td = b; var l = a.___ot in V; return this.each(function (b, c) { l && H(c[a.___ot]) && (c["___i" + a.type] = !0, c[a.___ot](), c["___i" + a.type] = !1); c.dispatchEvent(a) }) };
	function za(a) { return a.multiple && a.options ? Q(u.call(a.options, function (a) { return a.selected && !a.disabled && !a.parentNode.disabled }), "value") : a.value || "" } var Aa = /radio|checkbox/i; I.val = function (a) { return arguments.length ? this.each(function (b, c) { if ((b = c.multiple && c.options) || Aa.test(c.type)) { var d = r(a) ? w.call(a, String) : null === a ? [] : [String(a)]; b ? L(c.options, function (a, b) { b.selected = 0 <= d.indexOf(b.value) }, !0) : c.checked = 0 <= d.indexOf(c.value) } else c.value = void 0 === a || null === a ? "" : a }) : this[0] && za(this[0]) };
	I.clone = function () { return this.map(function (a, b) { return b.cloneNode(!0) }) }; I.detach = function (a) { O(this, a).each(function (a, c) { c.parentNode && c.parentNode.removeChild(c) }); return this }; var Ba = /^\s*<(\w+)[^>]*>/, Ca = /^<(\w+)\s*\/?>(?:<\/\1>)?$/; function G(a) { if (!F(a)) return []; if (Ca.test(a)) return [p(RegExp.$1)]; var b = Ba.test(a) && RegExp.$1; b = p("tr" == b ? "tbody" : "div"); b.innerHTML = a; return J(b.childNodes).detach().get() } J.parseHTML = G; I.empty = function () { return this.each(function (a, b) { for (; b.firstChild;)b.removeChild(b.firstChild) }) };
	function Z(a, b, c, d, h, f, l, x) { L(a, function (a, f) { L(J(f), function (a, f) { L(J(b), function (b, k) { var l = c ? k : f; k = c ? f : k; b = (c ? a : b) ? l.cloneNode(!0) : l; h ? k.insertBefore(b, d ? k.firstChild : null) : k.parentNode.insertBefore(b, d ? k : k.nextSibling) }, x) }, l) }, f); return b } I.after = function () { return Z(arguments, this, !1, !1, !1, !0, !0) }; I.append = function () { return Z(arguments, this, !1, !1, !0) }; I.appendTo = function (a) { return Z(arguments, this, !0, !1, !0) }; I.before = function () { return Z(arguments, this, !1, !0) };
	I.html = function (a) { return arguments.length ? void 0 === a ? this : this.each(function (b, c) { D(c) && (c.innerHTML = a) }) : this[0] && this[0].innerHTML }; I.insertAfter = function (a) { return Z(arguments, this, !0, !1, !1, !1, !1, !0) }; I.insertBefore = function (a) { return Z(arguments, this, !0, !0) }; I.prepend = function () { return Z(arguments, this, !1, !0, !0, !0, !0) }; I.prependTo = function (a) { return Z(arguments, this, !0, !0, !0, !1, !1, !0) }; I.remove = function (a) { O(this, a).detach().off(); return this }; I.replaceWith = function (a) { return this.before(a).remove() };
	I.replaceAll = function (a) { J(a).replaceWith(this); return this }; I.text = function (a) { return void 0 === a ? this[0] ? this[0].textContent : "" : this.each(function (b, c) { D(c) && (c.textContent = a) }) }; I.unwrap = function () { this.parent().each(function (a, b) { "BODY" !== b.tagName && (a = J(b), a.replaceWith(a.children())) }); return this }; I.wrapAll = function (a) { a = J(a); for (var b = a[0]; b.children.length;)b = b.firstElementChild; this.first().before(a); return this.appendTo(b) };
	I.wrap = function (a) { return this.each(function (b, c) { var d = J(a)[0]; J(c).wrapAll(b ? d.cloneNode(!0) : d) }) }; I.wrapInner = function (a) { return this.each(function (b, c) { b = J(c); c = b.contents(); c.length ? c.wrapAll(a) : b.append(a) }) }; I.offset = function () { var a = this[0]; if (a) return a = a.getBoundingClientRect(), { top: a.top + n.pageYOffset, left: a.left + n.pageXOffset } }; I.offsetParent = function () { return this.map(function (a, b) { for (a = b.offsetParent; a && "static" === S(a, "position");)a = a.offsetParent; return a || aa }) };
	I.children = function (a) { return O(J(R(Q(this, function (a) { return a.children }))), a) }; I.contents = function () { return J(R(Q(this, function (a) { return "IFRAME" === a.tagName ? [a.contentDocument] : "TEMPLATE" === a.tagName ? a.content.childNodes : a.childNodes }))) }; I.find = function (a) { return J(R(Q(this, function (b) { return B(a, b) }))) }; I.has = function (a) { var b = F(a) ? function (b, d) { return B(a, d).length } : function (b, d) { return d.contains(a) }; return this.filter(b) };
	I.is = function (a) { var b = N(a); return A.call(this, function (a, d) { return b.call(a, d, a) }) }; I.next = function (a, b, c) { return O(J(R(Q(this, "nextElementSibling", b, c))), a) }; I.nextAll = function (a) { return this.next(a, !0) }; I.nextUntil = function (a, b) { return this.next(b, !0, a) }; I.not = function (a) { var b = N(a); return this.filter(function (c, d) { return (!F(a) || D(d)) && !b.call(d, c, d) }) }; I.parent = function (a) { return O(J(R(Q(this, "parentNode"))), a) };
	I.index = function (a) { var b = a ? J(a)[0] : this[0]; a = a ? this : J(b).parent().children(); return v.call(a, b) }; I.closest = function (a) { var b = this.filter(a); if (b.length) return b; var c = this.parent(); return c.length ? c.closest(a) : b }; I.parents = function (a, b) { return O(J(R(Q(this, "parentElement", !0, b))), a) }; I.parentsUntil = function (a, b) { return this.parents(b, a) }; I.prev = function (a, b, c) { return O(J(R(Q(this, "previousElementSibling", b, c))), a) }; I.prevAll = function (a) { return this.prev(a, !0) };
	I.prevUntil = function (a, b) { return this.prev(b, !0, a) }; I.siblings = function (a) { return O(J(R(Q(this, function (a) { return J(a).parent().children().not(a) }))), a) }; "undefined" !== typeof exports ? module.exports = J : n.cash = n.$ = J;
})(); !function () { var u = "displayController", l = "hasActiveHover", f = "forcedOpen", w = { scoped: {}, currentX: 0, currentY: 0, previousX: 0, previousY: 0, mouseTrackingActive: !1, windowWidth: 0, windowHeight: 0, scrollTop: 0, scrollLeft: 0 }, h = { none: 0, top: 1, bottom: 2, left: 4, right: 8 }; function d() { var o = this; o.top = "auto", o.left = "auto", o.right = "auto", o.bottom = "auto", o.set = function (e, t) { $.isNumeric(t) && (o[e] = Math.round(t)) } } function i(o, i, n) { var s = null, r = w.scoped[i.popupId]; function c(e, t) { p(), o[0][l] || (e ? (t && (o[0][f] = !0), n.showTip(o)) : (r.tipOpenImminent = !0, s = setTimeout(function () { var e, t; s = null, e = Math.abs(w.previousX - w.currentX), t = Math.abs(w.previousY - w.currentY), e + t < i.intentSensitivity ? n.showTip(o) : (w.previousX = w.currentX, w.previousY = w.currentY, c()) }, i.intentPollInterval))) } function p() { s = clearTimeout(s), r.delayInProgress = !1 } this.show = c, this.hide = function (e) { p(), r.tipOpenImminent = !1, o[0][l] && (o[0][f] = !1, e ? n.hideTip(o) : (r.delayInProgress = !0, s = setTimeout(function () { s = null, n.hideTip(o), w.delayInProgress = !1 }, i.closeDelay))) }, this.cancel = p, this.resetPosition = function () { n.resetPosition(o) } } function e() { this.compute = function (e, t, o, i, n) { var s = t.split("-")[0], r = new d, c = function (e, t) { var o, i, n = e.offset(), s = e.outerWidth(), r = e.outerHeight(); switch (t) { case "n": o = n.left + s / 2, i = n.top; break; case "e": o = n.left + s, i = n.top + r / 2; break; case "s": o = n.left + s / 2, i = n.top + r; break; case "w": o = n.left, i = n.top + r / 2; break; case "nw": o = n.left, i = n.top; break; case "ne": o = n.left + s, i = n.top; break; case "sw": o = n.left, i = n.top + r; break; case "se": o = n.left + s, i = n.top + r }return { top: i, left: o } }(e, s); switch (t) { case "n": r.set("left", c.left - o / 2), r.set("bottom", w.windowHeight - c.top + n); break; case "e": r.set("left", c.left + n), r.set("top", c.top - i / 2); break; case "s": r.set("left", c.left - o / 2), r.set("top", c.top + n); break; case "w": r.set("top", c.top - i / 2), r.set("right", w.windowWidth - c.left + n); break; case "nw": r.set("bottom", w.windowHeight - c.top + n), r.set("right", w.windowWidth - c.left - 20); break; case "ne": r.set("left", c.left - 20), r.set("bottom", w.windowHeight - c.top + n); break; case "sw": r.set("top", c.top + n), r.set("right", w.windowWidth - c.left - 20); break; case "se": r.set("left", c.left - 20), r.set("top", c.top + n) }return r } } function n(r) { var c = new e, p = $("#" + r.popupId), o = w.scoped[r.popupId]; function i(e) { o.isClosing = !0, o.activeHover = null, o.isTipOpen = !1, o.desyncTimeout = clearInterval(o.desyncTimeout), e[0][l] = !1, e[0][f] = !1, p.hide(); e = new d; o.isClosing = !1, p.removeClass(), e.set("top", w.currentY + r.offset), e.set("left", w.currentX + r.offset), p.css(e) } function n(i) { var e; r.smartPlacement ? (e = $.fn.powerTip.smartPlacementLists[r.placement], $.each(e, function (e, t) { var o = function (e, t, o) { var i = w.scrollTop, n = w.scrollLeft, s = i + w.windowHeight, r = n + w.windowWidth, c = h.none; (e.top < i || Math.abs(e.bottom - w.windowHeight) - o < i) && (c |= h.top); (e.top + o > s || Math.abs(e.bottom - w.windowHeight) > s) && (c |= h.bottom); (e.left < n || e.right + t > r) && (c |= h.left); (e.left + t > r || e.right < n) && (c |= h.right); return c }(s(i, t), p.outerWidth() || r.defaultSize[0], p.outerHeight() || r.defaultSize[1]); if (o === h.none) return !1 })) : (s(i, r.placement), r.placement) } function s(e, t) { var o, i, n = 0, s = new d; for (s.set("top", 0), s.set("left", 0), p.css(s); o = p.outerWidth() || r.defaultSize[0], i = p.outerHeight() || r.defaultSize[1], s = c.compute(e, t, o, i, r.offset), p.css(s), ++n <= 5 && (o !== p.outerWidth() || i !== p.outerHeight());); return s } function a() { var e = !1; !o.isTipOpen || o.isClosing || o.delayInProgress || (e = !1 === o.activeHover[0][l] || o.activeHover.is(":disabled") || !(t(o.activeHover) || o.activeHover.is(":focus") || o.activeHover[0][f] || t(p)) ? !0 : e) && i(o.activeHover) } o || (w.scoped[r.popupId] = o = {}), 0 === p.length && (p = $('<div id="' + r.popupId + '"/>'), $("body").append(p)), p.on({ mouseenter: function () { o.activeHover && o.activeHover[0][u].cancel() }, mouseleave: function () { o.activeHover && o.activeHover[0][u].hide() } }), this.showTip = function (e) { e[0][l] = !0, function e(t) { if (!t[0][l]) return; if (o.isTipOpen) return o.isClosing || i(o.activeHover), void setTimeout(function () { e(t) }, 100); p.empty(); r.preRender && r.preRender(t[0]); o.activeHover = t; o.isTipOpen = !0; n(t); p.show(); o.desyncTimeout || (o.desyncTimeout = setInterval(a, 500)) }(e) }, this.hideTip = i, this.resetPosition = n } function s(e) { w.currentX = e.pageX, w.currentY = e.pageY } function t(e) { var t = e.offset(); return w.currentX >= t.left && w.currentX <= t.left + e.width() && w.currentY >= t.top && w.currentY <= t.top + e.height() } $.fn.powerTip = function (e) { if (!this.length) return this; var t = Object.assign({}, $.fn.powerTip.defaults, e), o = new n(t); return function () { { var e; w.mouseTrackingActive || (w.mouseTrackingActive = !0, e = $(window), w.scrollLeft = window.scrollX, w.scrollTop = window.scrollY, w.windowWidth = e.width(), w.windowHeight = e.height(), document.addEventListener("mousemove", s), window.addEventListener("resize", function () { w.windowWidth = e.width(), w.windowHeight = e.height() }, { passive: !0 }), window.addEventListener("scroll", function () { var e = window.scrollX, t = window.scrollY; e !== w.scrollLeft && (w.currentX += e - w.scrollLeft, w.scrollLeft = e), t !== w.scrollTop && (w.currentY += t - w.scrollTop, w.scrollTop = t) }, { passive: !0 })) } }(), this.each(function () { var e = $(this); this[u] && $.powerTip.destroy(e), this[u] = new i(e, t, o) }), this.on({ mouseenter: function (e) { $.powerTip.show(this, e) }, mouseleave: function () { $.powerTip.hide(this) } }), this }, $.fn.powerTip.defaults = { popupId: "powerTip", intentSensitivity: 7, intentPollInterval: 150, closeDelay: 150, placement: "n", smartPlacement: !0, defaultSize: [260, 120], offset: 10 }, $.fn.powerTip.smartPlacementLists = { n: ["n", "ne", "nw", "s"], e: ["e", "ne", "se", "w", "nw", "sw", "n", "s", "e"], s: ["s", "se", "sw", "n"], w: ["w", "nw", "sw", "e", "ne", "se", "n", "s", "w"], nw: ["nw", "w", "sw", "n", "s", "se", "nw"], ne: ["ne", "e", "se", "n", "s", "sw", "ne"], sw: ["sw", "w", "nw", "s", "n", "ne", "sw"], se: ["se", "e", "ne", "s", "n", "nw", "se"] }, $.powerTip = { show: function (e, t) { return t ? (s(t), w.previousX = t.pageX, w.previousY = t.pageY, $(e)[0][u].show()) : $(e).first()[0][u].show(!0, !0), e }, reposition: function (e) { return $(e).first()[0][u].resetPosition(), e }, hide: function (e, t) { return $(e).first()[0][u].hide(t), e }, destroy: function (e) { return $(e).off(".powertip").each(function () { delete this[u], delete this[l], delete this[f] }), e } }, $.powerTip.showTip = $.powerTip.show, $.powerTip.closeTip = $.powerTip.hide }();
// https://github.com/ornicar/howler.js/tree/2.0-lila-trim2
!function () { "use strict"; var e = function () { this.init() }; e.prototype = { init: function () { var e = this || n; return e._codecs = {}, e._howls = [], e._canPlayEvent = "canplaythrough", e.noAudio = !1, e.usingWebAudio = !0, e.autoSuspend = !0, e.ctx = null, e.mobileAutoEnable = !0, e._setup(), e }, unload: function () { for (var e = this || n, t = e._howls.length - 1; t >= 0; t--)e._howls[t].unload(); return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(), e.ctx = null, d()), e }, codecs: function (e) { return (this || n)._codecs[e.replace(/^x-/, "")] }, _setup: function () { var e = this || n; if (e.state = e.ctx && e.ctx.state || "running", e._autoSuspend(), !e.usingWebAudio) if ("undefined" != typeof Audio) try { void 0 === (t = new Audio).oncanplaythrough && (e._canPlayEvent = "canplay") } catch (o) { e.noAudio = !0 } else e.noAudio = !0; try { var t; (t = new Audio).muted ? e.noAudio = !0 : e._codecs = { mp3: !(!t.canPlayType("audio/mpeg;").replace(/^no$/, "") && !t.canPlayType("audio/mp3;").replace(/^no$/, "")), ogg: !!t.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, "") } } catch (o) { } return e }, _enableMobileAudio: function () { var e = this || n; if (e._mobileEnabled || !e.ctx || !/iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk|Mobi/i.test(navigator.userAgent) && !("ontouchend" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) return; e._mobileEnabled = !1, e._mobileUnloaded || 44100 === e.ctx.sampleRate || (e._mobileUnloaded = !0, e.unload()), e._scratchBuffer = e.ctx.createBuffer(1, 1, 22050); const t = ["touchstart", "touchend", "click"]; var o = function () { var n = e.ctx.createBufferSource(); n.buffer = e._scratchBuffer, n.connect(e.ctx.destination), void 0 === n.start ? n.noteOn(0) : n.start(0), n.onended = function () { n.disconnect(0), e._mobileEnabled = !0, e.mobileAutoEnable = !1, t.forEach(e => document.removeEventListener(e, o, !0)) } }; return t.forEach(e => document.addEventListener(e, o, !0)), e }, _autoSuspend: function () { var e = this; if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && n.usingWebAudio) { for (var t = 0; t < e._howls.length; t++)if (e._howls[t]._webAudio) return e._howls[t]._sounds.length > 0; return e._suspendTimer && clearTimeout(e._suspendTimer), e._suspendTimer = setTimeout((function () { e.autoSuspend && (e._suspendTimer = null, e.state = "suspending", e.ctx.suspend().then((function () { e.state = "suspended", e._resumeAfterSuspend && (delete e._resumeAfterSuspend, e._autoResume()) }))) }), 9e4), e } }, _autoResume: function () { var e = this; if (e.ctx && void 0 !== e.ctx.resume && n.usingWebAudio) return "running" === e.state && e._suspendTimer ? (clearTimeout(e._suspendTimer), e._suspendTimer = null) : "suspended" === e.state ? (e.state = "resuming", e.ctx.resume().then((function () { e.state = "running", e._howls.forEach(e => e._emit("resume")) })), e._suspendTimer && (clearTimeout(e._suspendTimer), e._suspendTimer = null)) : "suspending" === e.state && (e._resumeAfterSuspend = !0), e } }; var n = new e, t = function (e) { e.src && 0 !== e.src.length ? this.init(e) : console.error("An array of source files must be passed with any new Howl.") }; t.prototype = { init: function (e) { var t = this; return n.ctx || d(), t._html5 = !1, t._pool = 5, t._preload = !0, t._src = "string" != typeof e.src ? e.src : [e.src], t._volume = void 0 !== e.volume ? e.volume : 1, t._duration = 0, t._state = "unloaded", t._sounds = [], t._endTimers = {}, t._queue = [], t._onload = t._onpause = t._onplay = t._onstop = t._onvolume = t._onresume = t._onend = [], t._webAudio = n.usingWebAudio && !t._html5, void 0 !== n.ctx && n.ctx && n.mobileAutoEnable && n._enableMobileAudio(), n._howls.push(t), t._preload && t.load(), t }, load: function () { var e = this, t = null; if (!n.noAudio) { "string" == typeof e._src && (e._src = [e._src]); for (var u = 0; u < e._src.length; u++) { var i = e._src[u], d = /\.([^.]+)$/.exec(i.split("?", 1)[0]); if (d && (d = d[1].toLowerCase()), n.codecs(d)) { t = e._src[u]; break } } if (t) return e._src = t, e._state = "loading", new o(e), e._webAudio && r(e), e } }, play: function () { var e = this, t = e._inactiveSound(); if ("loaded" !== e._state) return e._queue.push({ event: "play", action() { e.play() } }), t._id; e._webAudio && n._autoResume(), t._ended = !1; var o = t._node; if (e._webAudio) { var u = function () { e._refreshBuffer(t), o.gain.setValueAtTime(t._volume, n.ctx.currentTime), t._playStart = n.ctx.currentTime, void 0 === o.bufferSource.start ? o.bufferSource.noteGrainOn(0, 0, e._duration) : o.bufferSource.start(0, 0, e._duration), e._endTimers[t._id] = setTimeout(e._ended.bind(e, t), 1e3 * e._duration), setTimeout((function () { e._emit("play", t._id) }), 0) }, r = "running" === n.state; "loaded" === e._state && r ? u() : (e.on(r ? "load" : "resume", u, r ? t._id : null, 1), e._clearTimer(t._id)) } else { var i = function () { o.currentTime = 0, o.volume = t._volume, setTimeout((function () { o.play(), e._endTimers[t._id] = setTimeout(e._ended.bind(e, t), 1e3 * e._duration), e._emit("play", t._id) }), 0) }, d = "loaded" === e._state; if (4 === o.readyState || d) i(); else { var s = function () { i(), o.removeEventListener(n._canPlayEvent, s, !1) }; o.addEventListener(n._canPlayEvent, s, !1), e._clearTimer(t._id) } } return t._id }, stop: function (e) { var n = this; if ("loaded" !== n._state) return n._queue.push({ event: "stop", action() { n.stop(e) } }), n; for (var t = n._getSoundIds(e), o = 0; o < t.length; o++) { n._clearTimer(t[o]); var u = n._soundById(t[o]); if (u && (u._ended = !0, u._node)) if (n._webAudio) { if (!u._node.bufferSource) return n._emit("stop", u._id), n; void 0 === u._node.bufferSource.stop ? u._node.bufferSource.noteOff(0) : u._node.bufferSource.stop(0), n._cleanBuffer(u._node) } else isNaN(u._node.duration) && u._node.duration !== 1 / 0 || (u._node.currentTime = u._start || 0, u._node.pause()); u && n._emit("stop", u._id) } return n }, volume: function (e) { var t = this; return "loaded" !== t._state ? (t._queue.push({ event: "volume", action() { t.volume.apply(t, [e]) } }), t) : (t._volume = e, t._sounds.forEach((function (o) { o._volume = e, t._webAudio && o._node ? o._node.gain.setValueAtTime(e, n.ctx.currentTime) : o._node && (o._node.volume = e), t._emit("volume", o._id) })), t) }, playing: function (e) { return "number" == typeof e ? !!this._soundById(e) : this._sounds.length > 0 }, state: function () { return this._state }, on: function (e, n, t, o) { this["_on" + e].push({ id: t, fn: n, once: !!o }) }, _emit: function (e, n, t) { for (var o = this["_on" + e], u = o.length - 1; u >= 0; u--)o[u].id && o[u].id !== n && "load" !== e || (setTimeout(function (e) { e.call(this, n, t) }.bind(this, o[u].fn), 0), o[u].once && o.splice(u, 1)) }, _loadQueue: function () { var e = this; if (e._queue.length > 0) { var n = e._queue[0]; e.on(n.event, (function () { e._queue.shift(), e._loadQueue() }), null, 1), n.action() } return e }, _ended: function (e) { var t = this; return t._emit("end", e._id), t._webAudio && (e._ended = !0, t._clearTimer(e._id), t._cleanBuffer(e._node), n._autoSuspend()), t._webAudio || t.stop(e._id), t }, _clearTimer: function (e) { var n = this; return n._endTimers[e] && (clearTimeout(n._endTimers[e]), delete n._endTimers[e]), n }, _soundById: function (e) { for (var n = this, t = 0; t < n._sounds.length; t++)if (e === n._sounds[t]._id) return n._sounds[t]; return null }, _inactiveSound: function () { var e = this; e._drain(); for (var n = 0; n < e._sounds.length; n++)if (e._sounds[n]._ended) return e._sounds[n].reset(); return new o(e) }, _drain: function () { var e = this, n = e._pool, t = 0; if (!(e._sounds.length < n)) { var o = e._sounds.reduce((e, n) => e + (n._ended ? 1 : 0), 0); for (t = e._sounds.length - 1; t >= 0; t--) { if (o <= n) return; e._sounds[t]._ended && (e._webAudio && e._sounds[t]._node && e._sounds[t]._node.disconnect(0), e._sounds.splice(t, 1), o--) } } }, _getSoundIds: function (e) { if (void 0 === e) { for (var n = [], t = 0; t < this._sounds.length; t++)n.push(this._sounds[t]._id); return n } return [e] }, _refreshBuffer: function (e) { return e._node.bufferSource = n.ctx.createBufferSource(), e._node.bufferSource.buffer = u[this._src], e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node), this }, _cleanBuffer: function (e) { var n = this; if (n._scratchBuffer) { e.bufferSource.onended = null, e.bufferSource.disconnect(0); try { e.bufferSource.buffer = n._scratchBuffer } catch (t) { } } return e.bufferSource = null, n } }; var o = function (e) { this._parent = e, this.init() }; o.prototype = { init: function () { var e = this, n = e._parent; return e._volume = n._volume, e._ended = !0, e._id = Math.round(Date.now() * Math.random()), n._sounds.push(e), e.create(), e }, create: function () { var e = this, t = e._parent, o = e._volume; return t._webAudio ? (e._node = n.ctx.createGain ? n.ctx.createGain() : n.ctx.createGainNode(), e._node.gain.setValueAtTime(o, n.ctx.currentTime), e._node.connect(n.ctx.destination)) : (e._node = new Audio, e._loadFn = e._loadListener.bind(e), e._node.addEventListener(n._canPlayEvent, e._loadFn, !1), e._node.src = t._src, e._node.preload = "auto", e._node.volume = o, e._node.load()), e }, reset: function () { var e = this, n = e._parent; return e._volume = n._volume, e._ended = !0, e._id = Math.round(Date.now() * Math.random()), e }, _loadListener: function () { var e = this, t = e._parent; t._duration = Math.ceil(10 * e._node.duration) / 10, "loaded" !== t._state && (t._state = "loaded", t._emit("load"), t._loadQueue()), e._node.removeEventListener(n._canPlayEvent, e._loadFn, !1) } }; var u = {}, r = function (e) { var t = e._src; u[t] ? (e._duration = u[t].duration, i(e)) : fetch(t, {}).then(t => { t.ok ? t.arrayBuffer().then(t => n.ctx.decodeAudioData(t, n => { n && e._sounds.length > 0 && (u[e._src] = n, i(e, n)) })) : Promise.reject() }).catch(() => { e._html5 = !0, e._webAudio = !1, e._sounds = [], delete u[t], e.load() }) }, i = function (e, n) { n && !e._duration && (e._duration = n.duration), "loaded" !== e._state && (e._state = "loaded", e._emit("load"), e._loadQueue()) }, d = function () { try { "undefined" != typeof AudioContext ? n.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? n.ctx = new webkitAudioContext : n.usingWebAudio = !1 } catch (t) { n.usingWebAudio = !1 } var e = /iP(hone|od|ad)/.test(navigator) && navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/) ? parseInt(appVersion[1], 10) : null; e && e < 9 && !/safari/.test(navigator.userAgent.toLowerCase()) && (n.usingWebAudio = !1), n._setup() }; window.Howler = n, window.Howl = t }();
!function () { for (var e, t = { 8: "backspace", 9: "tab", 13: "enter", 16: "shift", 17: "ctrl", 18: "alt", 20: "capslock", 27: "esc", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home", 37: "left", 38: "up", 39: "right", 40: "down", 45: "ins", 46: "del", 91: "meta", 93: "meta", 224: "meta" }, n = { 106: "*", 107: "+", 109: "-", 110: ".", 111: "/", 186: ";", 187: "=", 188: ",", 189: "-", 190: ".", 191: "/", 192: "`", 219: "[", 220: "\\", 221: "]", 222: "'" }, a = { option: "alt", command: "meta", return: "enter", escape: "esc", plus: "+", mod: /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? "meta" : "ctrl" }, r = 1; r < 20; ++r)t[111 + r] = "f" + r; for (r = 0; r <= 9; ++r)t[r + 96] = r.toString(); function o(e) { if ("keypress" == e.type) { var a = String.fromCharCode(e.which); return e.shiftKey || (a = a.toLowerCase()), a } return t[e.which] ? t[e.which] : n[e.which] ? n[e.which] : String.fromCharCode(e.which).toLowerCase() } function i(e) { return "shift" == e || "ctrl" == e || "alt" == e || "meta" == e } function c(n, a, r) { return r || (r = function () { if (!e) for (var n in e = {}, t) n > 95 && n < 112 || t.hasOwnProperty(n) && (e[t[n]] = n); return e }()[n] ? "keydown" : "keypress"), "keypress" == r && a.length && (r = "keydown"), r } function s(e, t) { var n, r, o, s = []; for (n = function (e) { return "+" === e ? ["+"] : (e = e.replace(/\+{2}/g, "+plus")).split("+") }(e), o = 0; o < n.length; ++o)r = n[o], a[r] && (r = a[r]), i(r) && s.push(r); return { key: r, modifiers: s, action: t = c(r, s, t) } } function l(e) { var t = this; if (e = e || document, !(t instanceof l)) return new l(e); t.target = e, t._callbacks = {}; var n, a = {}, r = !1, c = !1, u = !1; function f(e) { e = e || {}; var t, n = !1; for (t in a) e[t] ? n = !0 : a[t] = 0; n || (u = !1) } function h(e, n, r, o, c, s) { var l, u, f, h, p = [], y = r.type; if (!t._callbacks[e]) return []; for ("keyup" == y && i(e) && (n = [e]), l = 0; l < t._callbacks[e].length; ++l)if (u = t._callbacks[e][l], (o || !u.seq || a[u.seq] == u.level) && y == u.action && ("keypress" == y && !r.metaKey && !r.ctrlKey || (f = n, h = u.modifiers, f.sort().join(",") === h.sort().join(",")))) { var d = !o && u.combo == c, m = o && u.seq == o && u.level == s; (d || m) && t._callbacks[e].splice(l, 1), p.push(u) } return p } function p(e, t, n) { const a = t.target; ("esc" == n || "INPUT" != a.tagName && "SELECT" != a.tagName && "TEXTAREA" != a.tagName && !a.isContentEditable) && (e(), t.preventDefault(), t.stopPropagation()) } function y(e) { "number" != typeof e.which && (e.which = e.keyCode); var n = o(e); n && ("keyup" != e.type || r !== n ? t._handleKey.call(t, n, function (e) { var t = []; return e.shiftKey && t.push("shift"), e.altKey && t.push("alt"), e.ctrlKey && t.push("ctrl"), e.metaKey && t.push("meta"), t }(e), e) : r = !1) } function d(e, t, i, c) { function l(t) { return function () { u = t, ++a[e], clearTimeout(n), n = setTimeout(f, 1e3) } } function h(t) { p(i, t, e), "keyup" !== c && (r = o(t)), setTimeout(f, 10) } a[e] = 0; for (var y = 0; y < t.length; ++y) { var d = y + 1 === t.length ? h : l(c || s(t[y + 1]).action); m(t[y], d, c, e, y) } } function m(e, n, a, r, o) { var i, c = (e = e.replace(/\s+/g, " ")).split(" "); c.length > 1 ? d(e, c, n, a) : (i = s(e, a), t._callbacks[i.key] = t._callbacks[i.key] || [], h(i.key, i.modifiers, { type: i.action }, r, e, o), t._callbacks[i.key][r ? "unshift" : "push"]({ callback: n, modifiers: i.modifiers, action: i.action, seq: r, level: o, combo: e })) } t._handleKey = function (e, t, n) { var a, r = h(e, t, n), o = {}, s = 0, l = !1; for (a = 0; a < r.length; ++a)r[a].seq && (s = Math.max(s, r[a].level)); for (a = 0; a < r.length; ++a)if (r[a].seq) { if (r[a].level != s) continue; l = !0, o[r[a].seq] = 1, p(r[a].callback, n, r[a].combo) } else l || p(r[a].callback, n, r[a].combo); var y = "keypress" == n.type && c; n.type != u || i(e) || y || f(o), c = l && "keydown" == n.type }, t._bindMultiple = function (e, t, n) { e.forEach(e => m(e, t, n)) }, e.addEventListener("keypress", y), e.addEventListener("keydown", y), e.addEventListener("keyup", y) } l.prototype.bind = function (e, t, n) { return this._bindMultiple.call(this, e instanceof Array ? e : [e], t, n), this }, window.Mousetrap = new l }(); "use strict"; (() => {
	var Tt = Object.defineProperty; var Te = (e, t) => { for (var o in t) Tt(e, o, { get: t[o], enumerable: !0 }) }; var a = { date: "2023-06-02T11:53:03+00:00", commit: "fdff39af15762cec7437d14831d6650d98299c48", message: "rating range bounds in lobby setup" }; var N = "\uE025"; var Se = "\uE038"; var $e = "\uE03A"; var Me = "\uE03F"; var Ce = "\uE048"; var Le = "\uE04D"; var Ee = "\uE056"; var Ae = "\uE05A"; var Pe = "\uE065"; var F = {}; Te(F, { init: () => ee, initAll: () => B, initWith: () => Ie }); var De = e => `lichess-${e}`, U = (e, t) => e[De(t)], S = (e, t, o) => e[De(t)] = o; var He = ["a", "b", "c", "d", "e", "f", "g", "h"], Z = ["1", "2", "3", "4", "5", "6", "7", "8"]; var eo = [...Z].reverse(), Mt = Array.prototype.concat(...He.map(e => Z.map(t => e + t))); var Ct = e => [e.charCodeAt(0) - 97, e.charCodeAt(1) - 49], L = e => { if (e) return e[1] === "@" ? [e.slice(2, 4)] : [e.slice(0, 2), e.slice(2, 4)] }, to = Mt.map(Ct); var ee = e => { let [t, o, n] = e.getAttribute("data-state").split(","); Ie(e, t, o, n) }, Ie = (e, t, o, n) => { window.Chessground ? S(e, "chessground", window.Chessground(e, { orientation: o, coordinates: !1, viewOnly: !e.getAttribute("data-playable"), fen: t, lastMove: L(n), drawable: { enabled: !1, visible: !1 } })) : setTimeout(() => ee(e), 500) }, B = e => Array.from((e || document).getElementsByClassName("mini-board--init")).forEach(t => { t.classList.remove("mini-board--init"), ee(t) }); var j = {}; Te(j, { finish: () => de, init: () => ce, initAll: () => R, update: () => le }); var te = e => e.includes(" w") ? "white" : "black"; function E(e, t) { let o = U(e, "clock"); o ? o.set(t) : S(e, "clock", new ne(e, t)) } var ne = class { constructor(t, o) { this.el = t; this.opts = o; this.set = t => { this.opts = t, this.target = t.time * 1e3 + Date.now(), this.render(), clearInterval(this.interval), t.pause || (this.interval = setInterval(this.render, 1e3)) }; this.render = () => { document.body.contains(this.el) ? (this.el.textContent = Lt(this.target - Date.now()), this.el.classList.toggle("clock--run", !this.opts.pause)) : clearInterval(this.interval) }; this.target = o.time * 1e3 + Date.now(), o.pause || (this.interval = setInterval(this.render, 1e3)), this.render() } }, Lt = e => { let t = new Date(Math.max(0, e + 500)), o = t.getUTCHours(), n = t.getUTCMinutes(), s = t.getUTCSeconds(); return o > 0 ? o + ":" + oe(n) + ":" + oe(s) : n + ":" + oe(s) }, oe = e => (e < 10 ? "0" : "") + e; var se = e => e !== void 0, ie = e => e != null; var _e = e => { let t; return () => (t === void 0 && (t = e()), t) }; var Et = { Accept: "application/vnd.lichess.v5+json" }, At = { cache: "no-cache", credentials: "same-origin" }, Pt = { "X-Requested-With": "XMLHttpRequest" }, Oe = e => { if (e.ok) return e; throw e.status == 429 ? new Error("Too many requests") : e.status == 413 ? new Error("The uploaded file is too large") : new Error(`Error ${e.status}`) }, Ne = (e, t = {}) => fetch(e, { headers: { ...Et }, ...t }).then(o => Oe(o).json()); var b = (e, t = {}) => Dt(e, t).then(o => Oe(o).text()), Dt = (e, t = {}) => fetch(e, { ...At, headers: { ...Pt }, ...t }), Ue = e => new Promise((t, o) => { let n = document.body.getAttribute("data-nonce"), s = document.createElement("script"); n && s.setAttribute("nonce", n), s.onload = t, s.onerror = o, s.src = e, document.head.append(s) }), Be = e => { let t = new FormData; for (let o of Object.keys(e)) se(e[o]) && t.append(o, e[o]); return t }, Fe = (e, t) => { let o = new URLSearchParams; for (let s of Object.keys(t)) se(t[s]) && o.append(s, t[s]); let n = o.toString(); return n ? `${e}?${n}` : e }, Re = (e, t) => { let o = e.getAttribute("action"), n = new FormData(e); return t != null && t.name && (t != null && t.value) && n.set(t.name, t.value), o ? b(o, { method: e.method, body: n }) : Promise.reject(`Form has no action: ${e}`) }; function P(e, t, o) { let n = ["mousemove", "touchstart"], s = !1, i = !0, r = performance.now(), c = () => { i || o(), i = !0, r = performance.now(), d() }, l = () => { s || (n.forEach(p => document.addEventListener(p, c)), s = !0) }, d = () => { s && (n.forEach(p => document.removeEventListener(p, c)), s = !1) }; setInterval(() => { i && performance.now() - r > e && (t(), i = !1), l() }, 1e4) } var je = () => { try { let e = window.crypto.getRandomValues(new Uint8Array(9)); return btoa(String.fromCharCode(...e)).replace(/[/+]/g, "_") } catch (e) { return Math.random().toString(36).slice(2, 12) } }; var Ht = je(), x = Ht; var qe = !1, Ve = e => { let t; if (typeof e == "string") t = e; else if (t = e.url, e.cookie) { let n = [encodeURIComponent(e.cookie.name) + "=" + e.cookie.value, "; max-age=" + e.cookie.maxAge, "; path=/", "; domain=" + location.hostname].join(""); document.cookie = n } let o = "//" + location.host + "/" + t.replace(/^\//, ""); qe = o, location.href = o }, re = { expected: !1 }, y = () => { qe || (re.expected = !0, lichess.socket.disconnect(), location.hash ? location.reload() : location.assign(location.href)) }; var ze = e => { let t = { get: o => e.getItem(o), set: (o, n) => e.setItem(o, n), fire: (o, n) => e.setItem(o, JSON.stringify({ sri: x, nonce: Math.random(), value: n })), remove: o => e.removeItem(o), make: o => ({ get: () => t.get(o), set: n => t.set(o, n), fire: n => t.fire(o, n), remove: () => t.remove(o), listen: n => window.addEventListener("storage", s => { if (s.key !== o || s.storageArea !== e || s.newValue === null) return; let i; try { i = JSON.parse(s.newValue) } catch (r) { return } i != null && i.sri && i.sri !== x && n(i) }) }), boolean: o => ({ get: () => t.get(o) == "1", getOrDefault: n => { let s = t.get(o); return s === null ? n : s == "1" }, set: n => t.set(o, n ? "1" : "0"), toggle: () => t.set(o, t.get(o) == "1" ? "0" : "1") }) }; return t }, m = ze(window.localStorage), We = ze(window.sessionStorage); function D(e, t) { return t === "always" ? !0 : m.get(e) ? !1 : (m.set(e, "1"), !0) } var It = WebSocket.prototype.send, M = class {
		constructor(t, o, n = {}) {
			this.url = t; this.pubsub = lichess.pubsub; this.ackable = new ae((t, o, n) => this.send(t, o, n)); this.lastPingTime = performance.now(); this.pongCount = 0; this.averageLag = 0; this.tryOtherUrl = !1; this.autoReconnect = !0; this.nbConnects = 0; this.storage = m.make("surl17"); this.resendWhenOpen = []; this.sign = t => { this._sign = t, this.ackable.sign(t) }; this.connect = () => { this.destroy(), this.autoReconnect = !0; let t = Fe(this.options.protocol + "//" + this.baseUrl() + this.url, { ...this.settings.params, v: this.version === !1 ? void 0 : this.version }); this.debug("connection attempt to " + t); try { } catch (o) { this.onError(o) } this.scheduleConnect(this.options.pingMaxLag) }; this.send = (t, o, n = {}, s = !1) => {
				let i = { t }; o !== void 0 && (n.withLag && (o.l = Math.round(this.averageLag)), n.millis >= 0 && (o.s = Math.round(n.millis * .1).toString(36)), i.d = o), n.ackable && (i.d = i.d || {}, this.ackable.register(t, i.d)); let r = JSON.stringify(i); if (!(t == "racerScore" && n.sign != this._sign)) {
					if (t == "move" && n.sign != this._sign) {
						let c; try {
							c = new Error().stack.split(`
`).join(" / ").replace(/\s+/g, " ")
						} catch (l) { c = `${l.message} ${navigator.userAgent}` } c.includes("round.nvui") || setTimeout(() => { D(`socket.rep.${Math.round(Date.now() / 1e3 / 3600 / 3)}`) ? this.send("rep", { n: `soc: ${r} ${c}` }) : lichess.socket.destroy() }, 1e4)
					} this.debug("send " + r), !this.ws || this.ws.readyState === WebSocket.CONNECTING ? s || this.resendWhenOpen.push([t, i.d, n]) : It.apply(this.ws, [r])
				}
			}; this.scheduleConnect = t => { this.options.idle && (t = 10 * 1e3 + Math.random() * 10 * 1e3), clearTimeout(this.pingSchedule), clearTimeout(this.connectSchedule), this.connectSchedule = setTimeout(() => { document.body.classList.add("offline"), document.body.classList.remove("online"), this.tryOtherUrl = !0, this.connect() }, t) }; this.schedulePing = t => { clearTimeout(this.pingSchedule), this.pingSchedule = setTimeout(this.pingNow, t) }; this.pingNow = () => { clearTimeout(this.pingSchedule), clearTimeout(this.connectSchedule); let t = this.options.isAuth && this.pongCount % 8 == 2 ? JSON.stringify({ t: "p", l: Math.round(.1 * this.averageLag) }) : "null"; try { this.ws.send(t), this.lastPingTime = performance.now() } catch (o) { this.debug(o, !0) } this.scheduleConnect(this.options.pingMaxLag) }; this.computePingDelay = () => this.options.pingDelay + (this.options.idle ? 1e3 : 0); this.pong = () => { clearTimeout(this.connectSchedule), this.schedulePing(this.computePingDelay()); let t = Math.min(performance.now() - this.lastPingTime, 1e4); this.pongCount++; let o = this.pongCount > 4 ? .1 : 1 / this.pongCount; this.averageLag += o * (t - this.averageLag), this.pubsub.emit("socket.lag", this.averageLag) }; this.handle = t => { if (t.v && this.version !== !1) { if (t.v <= this.version) { this.debug("already has event " + t.v); return } if (t.v > this.version + 1) return y(); this.version = t.v } switch (t.t || !1) { case !1: break; case "resync": y(); break; case "ack": this.ackable.onServerAck(t.d); break; default: this.settings.receive && this.settings.receive(t.t, t.d) || (this.pubsub.emit("socket.in." + t.t, t.d, t), this.settings.events[t.t] && this.settings.events[t.t](t.d || null, t)) } }; this.debug = (t, o = !1) => { (o || this.options.debug) && console.debug(t) }; this.destroy = () => { clearTimeout(this.pingSchedule), clearTimeout(this.connectSchedule), this.disconnect(), this.ws = void 0 }; this.disconnect = () => { let t = this.ws; t && (this.debug("Disconnect"), this.autoReconnect = !1, t.onerror = t.onclose = t.onopen = t.onmessage = () => { }, t.close()) }; this.onError = t => { this.options.debug = !0, this.debug(`error: ${t} ${JSON.stringify(t)}`), this.tryOtherUrl = !0, clearTimeout(this.pingSchedule) }; this.onSuccess = () => { if (this.nbConnects++, this.nbConnects == 1) { M.resolveFirstConnect(this.send); let t; P(10 * 60 * 1e3, () => { this.options.idle = !0, t = setTimeout(this.destroy, 2 * 60 * 60 * 1e3) }, () => { this.options.idle = !1, this.ws ? clearTimeout(t) : location.reload() }) } }; this.baseUrl = () => { return 'https://chessify.me' }; this.pingInterval = () => this.computePingDelay() + this.averageLag; this.getVersion = () => this.version; this.settings = { receive: n.receive, events: n.events || {}, params: { ...M.defaultParams, ...n.params || {} } }, this.options = { ...M.defaultOptions, ...n.options || {} }, this.version = o, this.pubsub.on("socket.send", this.send), this.connect()
		}
	}, h = M; h.defaultOptions = { idle: !1, pingMaxLag: 9e3, pingDelay: 2500, autoReconnectDelay: 3500, protocol: location.protocol === "https:" ? "wss:" : "ws:", isAuth: document.body.hasAttribute("user") }, h.defaultParams = { sri: x }, h.firstConnect = new Promise(t => { M.resolveFirstConnect = t }); var ae = class { constructor(t) { this.send = t; this.currentId = 1; this.messages = []; this.sign = t => this._sign = t; this.resend = () => { let t = performance.now() - 2500; this.messages.forEach(o => { o.at < t && this.send(o.t, o.d, { sign: this._sign }) }) }; this.register = (t, o) => { o.a = this.currentId++, this.messages.push({ t, d: o, at: performance.now() }) }; this.onServerAck = t => { this.messages = this.messages.filter(o => o.d.a !== t) }; setInterval(this.resend, 1200) } }; var ce = e => { if (!window.Chessground) setTimeout(() => ce(e), 200); else { let [t, o, n] = e.getAttribute("data-state").split(","), s = { coordinates: !1, viewOnly: !0, fen: t, orientation: o, lastMove: L(n), drawable: { enabled: !1, visible: !1 } }, i = $(e).removeClass("mini-game--init"), r = i.find(".cg-wrap"), c = te(t); S(r[0], "chessground", window.Chessground(r[0], s)), ["white", "black"].forEach(l => i.find(".mini-game__clock--" + l).each(function () { E(this, { time: parseInt(this.getAttribute("data-time")), pause: l != c || !Ge(t, l) }) })) } return e.getAttribute("data-live") }, Ge = (e, t) => t == "white" ? !e.includes("PPPPPPPP/RNBQKBNR") : !e.startsWith("rnbqkbnr/pppppppp"), R = e => { let t = Array.from((e || document).getElementsByClassName("mini-game--init")), o = t.map(ce).filter(n => n); o.length && h.firstConnect.then(n => n("startWatching", o.join(" "))) }, le = (e, t) => { let o = $(e), n = t.lm, s = U(e.querySelector(".cg-wrap"), "chessground"); s && s.set({ fen: t.fen, lastMove: L(n) }); let i = te(t.fen), r = (c, l) => { var d; isNaN(c) || E((d = o[0]) == null ? void 0 : d.querySelector(".mini-game__clock--" + l), { time: c, pause: l != i || !Ge(t.fen, l) }) }; r(t.wc, "white"), r(t.bc, "black") }, de = (e, t) => ["white", "black"].forEach(o => { let n = $(e).find(".mini-game__clock--" + o); n.data("managed") || n.replaceWith(`<span class="mini-game__result">${t ? t === o[0] ? 1 : 0 : "\xBD"}</span>`) }); function Ke(e, t) { if (t.length) if (e.includes("%s")) e = e.replace("%s", t[0]); else for (let o = 0; o < t.length; o++)e = e.replace("%" + (o + 1) + "$s", t[o]); return e } function Xe(e, t) { let o = e.split(/(%(?:\d\$)?s)/g); if (t.length) { let n = o.indexOf("%s"); if (n !== -1) o[n] = t[0]; else for (let s = 0; s < t.length; s++) { let i = o.indexOf("%" + (s + 1) + "$s"); i !== -1 && (o[i] = t[s]) } } return o } var ue = e => { let t = (o, ...n) => { let s = e[o]; return s ? Ke(s, n) : o }; return t.pluralSame = (o, n, ...s) => t.plural(o, n, n, ...s), t.plural = function (o, n, ...s) { let i = `${o}:${lichess.quantity(n)}`, r = e[i] || e[o]; return r ? Ke(r, s) : o }, t.noarg = o => e[o] || o, t.vdom = (o, ...n) => { let s = e[o]; return s ? Xe(s, n) : [o] }, t.vdomPlural = (o, n, ...s) => { let i = `${o}:${lichess.quantity(n)}`, r = e[i] || e[o]; return r ? Xe(r, s) : [o] }, t }, k = ue(lichess.siteI18n); var _t = [["nbYearsAgo", "inNbYears", 60 * 60 * 24 * 365, 1], ["nbMonthsAgo", "inNbMonths", 60 * 60 * 24 * 365 / 12, 1], ["nbWeeksAgo", "inNbWeeks", 60 * 60 * 24 * 7, 1], ["nbDaysAgo", "inNbDays", 60 * 60 * 24, 2], ["nbHoursAgo", "inNbHours", 60 * 60, 1], ["nbMinutesAgo", "inNbMinutes", 60, 1], ["nbSecondsAgo", "inNbSeconds", 1, 9], ["rightNow", "justNow", 1, 0]], Ye = e => e instanceof Date ? e : new Date(isNaN(e) ? e : parseInt(e)), Qe = e => { let t = Math.abs(e), o = _t.find(n => t >= n[2] * n[3]); return k.pluralSame(o[e < 0 ? 1 : 0], Math.floor(t / o[2])) }, Je, pe = () => Je = Je || (window.Intl && Intl.DateTimeFormat ? new Intl.DateTimeFormat(document.documentElement.lang, { year: "numeric", month: "short", day: "numeric", hour: "numeric", minute: "numeric" }).format : e => e.toLocaleString()), Ze = e => Qe((Date.now() - Ye(e).getTime()) / 1e3), me = e => requestAnimationFrame(() => { let t = Date.now();[].slice.call((e || document).getElementsByClassName("timeago"), 0, 99).forEach(o => { let n = o.classList, s = n.contains("abs"), i = n.contains("set"); if (o.lichessDate = o.lichessDate || Ye(o.getAttribute("datetime")), !i) { let r = pe()(o.lichessDate); s ? o.textContent = r : o.setAttribute("title", r), n.add("set"), (s || n.contains("once")) && n.remove("timeago") } if (!s) { let r = (t - o.lichessDate.getTime()) / 1e3; o.textContent = Qe(r), Math.abs(r) > 9999 && n.remove("timeago") } }) }), he = e => { me(), setTimeout(() => he(e * 1.1), e) }; var T = (e, t) => { window.requestIdleCallback ? window.requestIdleCallback(e, t ? { timeout: t } : void 0) : requestAnimationFrame(e) }, q = e => /[&<>"']/.test(e) ? e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&#39;").replace(/"/g, "&quot;") : e; var V, fe = () => { V && clearTimeout(V), V = void 0, $("#announce").remove() }, Nt = e => { fe(), e.msg && ($("body").append('<div id="announce" class="announce">' + q(e.msg) + (e.date ? '<time class="timeago" datetime="' + e.date + '"></time>' : "") + '<div class="actions"><a class="close">\xD7</a></div></div>').find("#announce .close").on("click", fe), V = setTimeout(fe, e.date ? new Date(e.date).getTime() - Date.now() : 5e3), e.date && lichess.contentLoaded()) }, H = Nt; function et() { $("#agreement form").on("submit", e => { let t = e.target; return Re(t), t.parentNode.remove(), !1 }) } var tt = () => window.matchMedia("(prefers-color-scheme: light)").media !== "not all"; var v = (e, t = {}) => { t = t || {}; let o = t.sameDomain ? "" : document.body.getAttribute("data-asset-url"), n = t.version || document.body.getAttribute("data-asset-version"); return o + "/assets" + (t.noVersion ? "" : "/_" + n) + "/" + e }, ge = new Map, z = (e, t) => { if (!ge.has(e)) { let o = document.createElement("link"); o.rel = "stylesheet", o.href = v(e), t && (o.media = `(prefers-color-scheme: ${t})`), ge.set(e, new Promise(n => { o.onload = () => n() })), document.head.append(o) } return ge.get(e) }, g = async e => { let t = $("body").data("theme"), o = (n, s) => z(`css/${e}.${document.dir || "ltr"}.${n}.${$("body").data("dev") ? "dev" : "min"}.css`, s); t === "system" ? tt() ? (await o("dark", "dark"), await o("light", "light")) : await o("dark") : await o(t) }, I = e => `compiled/${e}${$("body").data("dev") ? "" : ".min"}.js`, be = new Map, W = (e, t = {}) => (be.has(e) || be.set(e, Ue(v(e, t))), be.get(e)), w = e => W(I(e)), ot = async (e, t) => (await w(e), window[t]), G = async () => (g("complete"), await w("userComplete"), window.UserComplete), nt = () => (z("vendor/hopscotch/dist/css/hopscotch.min.css"), W("vendor/hopscotch/dist/js/hopscotch.min.js", { noVersion: !0 })); function ve(e) { return new Promise(t => requestAnimationFrame(() => { e.loadCss = g, t(window.LichessChat(document.querySelector(".mchat"), e)) })) } var st = '<div class="spinner" aria-label="loading"><svg viewBox="-2 -2 54 54"><g mask="url(#mask)" fill="none"><path id="a" stroke-width="3.779" d="m21.78 12.64c-1.284 8.436 8.943 12.7 14.54 17.61 3 2.632 4.412 4.442 5.684 7.93"/><path id="b" stroke-width="4.157" d="m43.19 36.32c2.817-1.203 6.659-5.482 5.441-7.623-2.251-3.957-8.883-14.69-11.89-19.73-0.4217-0.7079-0.2431-1.835 0.5931-3.3 1.358-2.38 1.956-5.628 1.956-5.628"/><path id="c" stroke-width="4.535" d="m37.45 2.178s-3.946 0.6463-6.237 2.234c-0.5998 0.4156-2.696 0.7984-3.896 0.6388-17.64-2.345-29.61 14.08-25.23 27.34 4.377 13.26 22.54 25.36 39.74 8.666"/></g></svg></div>'; var at = e => { var t; return (t = document.querySelector(".crosstable")) == null ? void 0 : t.contains(e) }, ct = (e, t) => o => { let n = ($(o).data("href") || o.href).replace(/\?.+$/, ""); t && t(n), b(n + "/mini").then(s => { let i = document.getElementById(e); i.innerHTML = s, lichess.contentLoaded(i) }) }, we = (e, t) => `<a class="btn-rack__btn" href="${e}" data-icon="${t}"></a>`, xe = (e, t) => $(e).removeClass("ulpt").powerTip({ preRender: ct("powerTip", o => { let n = o.slice(3), s = $(e).data("name") || $(e).html(); $("#powerTip").html('<div class="upt__info"><div class="upt__info__top"><span class="user-link offline">' + s + '</span></div></div><div class="upt__actions btn-rack">' + we("/@/" + n + "/tv", N) + we("/inbox/new?user=" + n, Ee) + we("/?user=" + n + "#friend", Ce) + '<a class="btn-rack__btn relation-button" disabled></a></div>') }), placement: t || e.getAttribute("data-pt-pos") || (at(e) ? "n" : "s") }), ye = e => $(e).removeClass("glpt").powerTip({ preRender: ct("miniGame", () => lichess.spinnerHtml), placement: at(e) ? "n" : "w", popupId: "miniGame" }); function it(e, t, o) { "ontouchstart" in window || (o(e), $.powerTip.show(e, t)) } function rt(e, t, o) { T(() => Array.prototype.forEach.call(e.querySelectorAll(t), n => o(n)), 800) } var Ut = { watchMouse() { document.body.addEventListener("mouseover", e => { let t = e.target; t.classList.contains("ulpt") ? it(t, e, xe) : t.classList.contains("glpt") && it(t, e, ye) }) }, manualGameIn(e) { rt(e, ".glpt", ye) }, manualGame: ye, manualUser: xe, manualUserIn(e) { rt(e, ".ulpt", xe) } }, K = Ut; var X = Object.create(null), Bt = { on(e, t) { (X[e] = X[e] || []).push(t) }, off(e, t) { let o = X[e]; if (o) { for (let n in o) if (o[n] === t) { o.splice(+n); break } } }, emit(e, ...t) { for (let o of X[e] || []) o.apply(null, t) } }, u = Bt; var J = () => /iPhone|iPod/.test(navigator.userAgent) || Rt(), Rt = () => (navigator == null ? void 0 : navigator.maxTouchPoints) > 2 && /iPad|Macintosh/.test(navigator.userAgent), xn = _e(() => window.matchMedia("(hover: hover) and (pointer: fine)").matches); var jt = new class { constructor() { this.soundSetSounds = new Map; this.standaloneSounds = new Map; this.soundSet = $("body").data("sound-set"); this.speechStorage = m.boolean("speech.enabled"); this.volumeStorage = m.make("sound-volume"); this.baseUrl = v("sound", { version: "_____1" }); this.loadOggOrMp3 = (e, t, o = !1) => (o ? this.standaloneSounds : this.soundSetSounds).set(e, new Howl({ src: ["ogg", "mp3"].map(n => `${t}.${n}`) })); this.loadStandard = (e, t) => { if (!this.enabled()) return; let o = e[0].toUpperCase() + e.slice(1); this.loadOggOrMp3(e, `${this.baseUrl}/${t || this.soundSet}/${o}`) }; this.getOrLoadSound = (e, t) => { var n; let o = (n = this.soundSetSounds.get(e)) != null ? n : this.standaloneSounds.get(e); return o || (this.loadStandard(e, t), o = this.soundSetSounds.get(e)), o }; this.setVolume = this.volumeStorage.set; this.getVolume = () => { let e = parseFloat(this.volumeStorage.get() || ""); return e >= 0 ? e : .7 }; this.enabled = () => this.soundSet !== "silent"; this.speech = e => (e !== void 0 && this.speechStorage.set(e), this.speechStorage.get()); this.say = (e, t = !1, o = !1, n = !1) => { if (t && speechSynthesis.cancel(), !this.speechStorage.get() && !o) return !1; let s = new SpeechSynthesisUtterance(e); return s.volume = this.getVolume(), s.lang = n ? document.documentElement.lang : "en-US", J() || (s.onstart = i => { var r; return (r = lichess.mic) == null ? void 0 : r.pause() }, s.onend = s.onerror = i => { var r; return (r = lichess.mic) == null ? void 0 : r.resume() }), speechSynthesis.speak(s), !0 }; this.sayOrPlay = (e, t) => this.say(t) || this.play(e); this.publish = () => u.emit("sound_set", this.soundSet); this.changeSet = e => { this.soundSet = e, this.soundSetSounds.clear(), this.publish() }; this.set = () => this.soundSet; this.soundSet == "music" && setTimeout(this.publish, 500) } preloadBoardSounds() { this.soundSet !== "music" && ["move", "capture", "check", "genericNotify"].forEach(e => this.loadStandard(e)) } play(e, t) { var i; if (!this.enabled()) return; let o = this.soundSet; if (o === "music" || this.speechStorage.get()) { if (["move", "capture", "check"].includes(e)) return; o = "standard" } let n = this.getOrLoadSound(e, o), s = () => n.volume(this.getVolume() * (t || 1)).play(); ((i = Howler.ctx) == null ? void 0 : i.state) === "suspended" ? Howler.ctx.resume().then(s) : s() } playOnce(e) { let t = () => { let o = lichess.storage.make("just-played"); Date.now() - parseInt(o.get(), 10) < 2e3 || (o.set("" + Date.now()), this.play(e)) }; document.hasFocus() ? t() : setTimeout(t, 10 + Math.random() * 500) } }, lt = jt; async function dt(e) { let t = e.store, o = await qt(e); function n(s) { return new Promise((i, r) => { let c = s(); c.onsuccess = l => i(l.target.result), c.onerror = l => r(l.target.result) }) } return { get(s) { let i = o.transaction(t, "readonly").objectStore(t); return n(i.get.bind(i, s)) }, put(s, i) { let r = o.transaction(t, "readwrite").objectStore(t); return n(r.put.bind(r, i, s)) }, count(s) { let i = o.transaction(t, "readonly").objectStore(t); return n(i.count.bind(i, s)) }, remove(s) { let i = o.transaction(t, "readwrite").objectStore(t); return n(i.delete.bind(i, s)) }, clear() { let s = o.transaction(t, "readwrite").objectStore(t); return n(s.clear.bind(s)) }, txn(s) { return o.transaction(t, s) } } } async function qt(e) { let t = (e == null ? void 0 : e.db) || `${e.store}--db`; return new Promise((o, n) => { var s; let i = window.indexedDB.open(t, (s = e == null ? void 0 : e.version) !== null && s !== void 0 ? s : 1); i.onsuccess = r => o(r.target.result), i.onerror = r => n(r.target.result), i.onupgradeneeded = r => { var c; let l = r.target.result, d = r.target.transaction, p = l.objectStoreNames.contains(e.store) ? d.objectStore(e.store) : l.createObjectStore(e.store); (c = e.upgrade) === null || c === void 0 || c.call(e, r, p) } }) } var Y = class { constructor() { this.listenerMap = new Map; this.vocab = [] } get listeners() { return [...this.listenerMap.values()].reverse() } }, pt, mt, ht = (mt = (pt = window.LichessVoicePlugin) == null ? void 0 : pt.mic) != null ? mt : new class { constructor() { this.language = "en"; this.voskStatus = ""; this.busy = !1; this.interrupt = !1; this.paused = 0; window.LichessVoicePlugin = { mic: this, vosk: void 0 }, lichess.mic = this, this.recs = { full: new Y, partial: new Y } } get lang() { return this.language } get vosk() { var e; return (e = window.LichessVoicePlugin) == null ? void 0 : e.vosk } addListener(e, t, o = "full") { this.recs[o].listenerMap.set(e, t) } removeListener(e) { Object.values(this.recs).forEach(t => t.listenerMap.delete(e)) } setLang(e) { e !== this.language && (this.stop(), this.language = e) } setVocabulary(e, t = "full") { var n, s; let o = this.recs[t]; e.length === o.vocab.length && e.every((i, r) => i === o.vocab[r]) || (o.vocab = e, (n = o.node) == null || n.disconnect(), o.node = void 0, (s = this.vosk) != null && s.isReady(this.lang) && this.initKaldi(t)) } useGrammar(e) { return Ne(lichess.assetUrl(`compiled/grammar/${e}.json`)) } stop() { var e, t; this.micTrack && (this.micTrack.enabled = !1), (e = this.vosk) == null || e.stop(), (t = this.download) == null || t.abort(), this.download || this.broadcast("", "stop"), this.download = void 0 } async start() { let [e, t] = ["Unknown", "error"]; try { if (this.isListening) return; this.busy = !0, await this.initModel(), this.recs.full.node || this.initKaldi("full"), this.recs.partial.node || this.initKaldi("partial"), this.micTrack.enabled = !0, this.mode = "full", [e, t] = ["Listening...", "start"] } catch (o) { throw this.stop(), console.log(o), [e, t] = [o.toString(), "error"], o } finally { this.busy = !1, this.broadcast(e, t, 4e3) } } pause() { var e; ++this.paused !== 1 || !((e = this.micTrack) != null && e.enabled) || (this.micTrack.enabled = !1, this.broadcast("Paused...", "status")) } resume() { var e; this.paused = Math.min(this.paused - 1, 0), !(this.paused !== 0 || ((e = this.micTrack) == null ? void 0 : e.enabled) === void 0) && (this.micTrack.enabled = !0, this.broadcast("Listening...", "status")) } initKaldi(e) { var t; this.recs[e].node = (t = this.vosk) == null ? void 0 : t.setRecognizer({ mode: e, audioCtx: this.audioCtx, vocab: this.recs[e].vocab, broadcast: this.broadcast.bind(this) }) } async initModel() { var n; if ((n = this.vosk) != null && n.isReady(this.lang)) return; this.broadcast("Loading..."); let e = lichess.assetUrl(ut.get(this.lang), { noVersion: !0 }), t = this.downloadModel(`/vosk/${e.replace(/[\W]/g, "_")}`), o = this.initAudio(); await lichess.loadModule("voice.vosk"), await t, await this.vosk.initModel(e, this.lang), await o } async initAudio() { this.audioCtx || (this.audioCtx = new AudioContext, this.mediaStream = await navigator.mediaDevices.getUserMedia({ video: !1, audio: { sampleRate: this.audioCtx.sampleRate, echoCancellation: !0, noiseSuppression: !0 } }), this.micSource = this.audioCtx.createMediaStreamSource(this.mediaStream)) } set mode(e) { var t, o; this.recs[e] && ((o = (t = this.recs[this.listenMode]) == null ? void 0 : t.node) == null || o.disconnect(), this.micSource.disconnect(), this.micSource.connect(this.recs[e].node), this.recs[e].node.connect(this.audioCtx.destination), this.vosk.setMode(e), this.listenMode = e) } get mode() { return this.listenMode } get isBusy() { return this.busy } get status() { return this.voskStatus } get isListening() { var e; return this.paused === 0 && !this.busy && ((e = this.micTrack) == null ? void 0 : e.enabled) === !0 } get micTrack() { var e; return (e = this.mediaStream) == null ? void 0 : e.getAudioTracks()[0] } broadcast(e, t = "status", o = 0) { if (t === "partial") { for (let n of this.recs.partial.listeners) n(e, t); return } window.clearTimeout(this.broadcastTimeout), this.voskStatus = e; for (let n of this.recs.full.listeners) this.interrupt || n(e, t); this.interrupt = !1, this.broadcastTimeout = o > 0 ? window.setTimeout(() => this.broadcast(""), o) : void 0 } stopPropagation() { this.interrupt = !0 } async downloadModel(e) { let t = await dt({ db: "/vosk", store: "FILE_DATA", version: 21, upgrade: (s, i) => { i == null || i.createIndex("timestamp", "timestamp", { unique: !1 }) } }); if (await t.count(`${e}/extracted.ok`) > 0) return; let o = await new Promise((s, i) => { this.download = new XMLHttpRequest, this.download.open("GET", lichess.assetUrl(ut.get(this.lang)), !0), this.download.responseType = "arraybuffer", this.download.onerror = r => i("Failed. See console"), this.download.onabort = r => i("Aborted"), this.download.onprogress = r => this.broadcast(r.total <= 0 ? "Downloading..." : `Downloaded ${Math.round(100 * r.loaded / r.total)}% of ${Math.round(r.total / 1e6)}MB`), this.download.onload = r => { var c, l, d; ((c = this.download) == null ? void 0 : c.status) !== 200 ? i(`${(l = this.download) == null ? void 0 : l.status} Failed`) : s((d = this.download) == null ? void 0 : d.response) }, this.download.send() }); this.broadcast("Extracting..."); let n = new Date; await t.put(e, { timestamp: n, mode: 16877 }), await t.put(`${e}/downloaded.ok`, { contents: new Uint8Array([]), timestamp: n, mode: 33206 }), await t.remove(`${e}/downloaded.tar.gz`), await t.put(`${e}/downloaded.tar.gz`, { contents: new Uint8Array(o), timestamp: n, mode: 33188 }), t.txn("readwrite").objectStore("FILE_DATA").index("timestamp") } }, ut = new Map([["ca", "lifat/vosk/model-ca-0.4.tar.gz"], ["cn", "lifat/vosk/model-cn-0.22.tar.gz"], ["cs", "lifat/vosk/model-cs-0.4.tar.gz"], ["de", "lifat/vosk/model-de-0.15.tar.gz"], ["en", "lifat/vosk/model-en-us-0.15.tar.gz"], ["eo", "lifat/vosk/model-eo-0.42.tar.gz"], ["es", "lifat/vosk/model-es-0.42.tar.gz"], ["fa", "lifat/vosk/model-fa-0.4.tar.gz"], ["fr", "lifat/vosk/model-fr-0.22.tar.gz"], ["hi", "lifat/vosk/model-hi-0.22.tar.gz"], ["it", "lifat/vosk/model-it-0.22.tar.gz"], ["ja", "lifat/vosk/model-ja-0.22.tar.gz"], ["ko", "lifat/vosk/model-ko-0.22.tar.gz"], ["kz", "lifat/vosk/model-kz-0.15.tar.gz"], ["nl", "lifat/vosk/model-nl-0.22.tar.gz"], ["pl", "lifat/vosk/model-pl-0.22.tar.gz"], ["pt", "lifat/vosk/model-pt-0.3.tar.gz"], ["ru", "lifat/vosk/model-ru-0.22.tar.gz"], ["tr", "lifat/vosk/model-tr-0.3.tar.gz"], ["uk", "lifat/vosk/model-uk-v3.tar.gz"], ["uz", "lifat/vosk/model-uz-0.22.tar.gz"], ["vi", "lifat/vosk/model-vi-0.4.tar.gz"]]); var ke, Vt = e => e.includes(" ") ? e.split(" ")[1] : e; function _(e) { let t = $(e); if (t.data("watched")) return; t.data("watched", 1); let o = $('<div class="chat__members__inner">').appendTo(t), n = $(`<div class="chat__members__number" data-icon="${Pe}" title="Spectators"></div>`).appendTo(o), s = $("<div>").appendTo(o); lichess.pubsub.on("socket.in.crowd", r => i(r.watchers || r)); let i = r => { if (ke = r, !r || !r.nb) { t.addClass("none"); return } if (n.text("" + r.nb), r.users) { let c = r.users.map(l => l || "").join(";"); if (s.data("prevUsers") !== c) { s.data("prevUsers", c); let l = r.users.map(d => d ? `<a class="user-link ulpt" href="/@/${Vt(d)}">${d}</a>` : "Anonymous"); r.anons === 1 ? l.push("Anonymous") : r.anons && l.push(`Anonymous (${r.anons})`), s.html(l.join(", ")) } } else s.html(""); t.removeClass("none") }; ke && i(ke) } var ft = () => { let e = window.lichess; e.StrongSocket = h, e.requestIdleCallback = T, e.sri = x, e.storage = m, e.tempStorage = We, e.once = D, e.powertip = K, e.clockWidget = E, e.spinnerHtml = st, e.assetUrl = v, e.loadCss = z, e.loadCssPath = g, e.jsModule = I, e.loadScript = W, e.loadModule = w, e.loadIife = ot, e.hopscotch = nt, e.userComplete = G, e.makeChat = ve, e.idleTimer = P, e.pubsub = u, e.unload = re, e.redirect = Ve, e.reload = y, e.watchers = _, e.escapeHtml = q, e.announce = H, e.trans = ue, e.sound = lt, e.mic = ht, e.miniBoard = F, e.miniGame = j, e.timeago = Ze, e.dateFormat = pe, e.contentLoaded = t => u.emit("content-loaded", t) }; console.info("Lichess is open source! https://lichess.org/source"); var zt = a, gt = zt; var O = class { constructor(t) { this.el = t; this.loaded = !1; this.receive = (t, o) => { this.users.clear(), t.forEach(this.insert), o.playing.map(n => this.users.get(n)).filter(ie).forEach(n => n.playing = !0), o.patrons.map(n => this.users.get(n)).filter(ie).forEach(n => n.patron = !0), this.repaint() }; this.repaint = () => { this.loaded && requestAnimationFrame(() => { var o; let t = Array.from(this.users.keys()).sort(); this.titleEl.innerHTML = k.pluralSame("nbFriendsOnline", t.length, this.loaded ? `<strong>${t.length}</strong>` : "-"), (o = this.el.querySelector(".nobody")) == null || o.classList.toggle("none", !!t[0]), this.el.querySelector(".list").innerHTML = t.map(n => this.renderFriend(this.users.get(n))).join("") }) }; this.renderFriend = t => { let o = `<i class="line${t.patron ? " patron" : ""}"></i>`, n = t.title ? `<span class="utitle"${t.title === "BOT" ? " data-bot" : ""}>${t.title}</span>&nbsp;` : "", s = "/@/" + t.name, i = t.playing ? `<a data-icon="${N}" class="tv ulpt" data-pt-pos="nw" href="${s}/tv" data-href="${s}"></a>` : ""; return `<div><a class="user-link ulpt" data-pt-pos="nw" href="${s}">${o}${n}${t.name}</a>${i}</div>` }; this.enters = (t, o) => { let n = this.insert(t); n.playing = o.playing, n.patron = o.patron, this.repaint() }; this.leaves = t => { this.users.delete(this.getId(t)), this.repaint() }; this.playing = t => { this.insert(t).playing = !0, this.repaint() }; this.stopped_playing = t => { this.insert(t).playing = !1, this.repaint() }; this.insert = t => { let o = this.getId(t); return this.users.has(o) || this.users.set(o, this.toFriend(t)), this.users.get(o) }; this.getId = t => t.toLowerCase().replace(/^\w+\s/, ""); this.toFriend = t => { let o = t.split(" "); return { id: o[o.length - 1].toLowerCase(), name: o[o.length - 1], title: o.length > 1 ? o[0] : void 0, playing: !1, patron: !1 } }; this.titleEl = this.el.querySelector(".friend_box_title"), this.titleEl.addEventListener("click", () => { var o; (o = this.el.querySelector(".content_wrap")) == null || o.classList.toggle("none"), this.loaded || (this.loaded = !0, u.emit("socket.send", "following_onlines")) }), this.users = new Map, u.on("socket.in.following_onlines", this.receive), ["enters", "leaves", "playing", "stopped_playing"].forEach(o => u.on("socket.in.following_" + o, this[o])) } }; async function bt() { var i; if (!("serviceWorker" in navigator && "Notification" in window && "PushManager" in window)) return; let e = new URL(v(I("serviceWorker"), { sameDomain: !0 }), self.location.href); e.searchParams.set("asset-url", document.body.getAttribute("data-asset-url")), document.body.getAttribute("data-dev") && e.searchParams.set("dev", "1"); let t = document.body.getAttribute("data-dev") ? "none" : "all" } var vt = () => { if (!lichess.dasher) { let t = $("#dasher_app").html(`<div class="initiating">${lichess.spinnerHtml}</div>`).empty()[0], o = $("#top .dasher")[0]; lichess.dasher = lichess.loadModule("dasher").then(() => window.LichessDasher(t, o)) } return lichess.dasher }; function wt() { let e = `<div class="initiating">${lichess.spinnerHtml}</div>`, t = o => { let n = document.querySelector(o), s = n && window.getComputedStyle(n).display; return s && s != "none" }; "ontouchstart" in window && !window.matchMedia("(max-width: 979px)").matches && $("#topnav > section > a").removeAttr("href"), $("#topnav-toggle").on("change", o => document.body.classList.toggle("masked", o.target.checked)), $("#top").on("click", "a.toggle", function () { let o = $(this).parent().toggleClass("shown"); return o.siblings(".shown").removeClass("shown"), setTimeout(() => { let n = s => { var i; (i = o[0]) != null && i.contains(s.target) || (o.removeClass("shown"), $("html").off("click", n)) }; $("html").on("click", n) }, 10), !1 }); { let o, n, s = $("#challenge-toggle"); s.one("mouseover click", () => i()); let i = function (r) { if (n) return; n = !0; let c = $("#challenge-app").html(e); g("challenge"), w("challenge").then(() => o = window.LichessChallenge(c[0], { data: r, show() { t("#challenge-app") || s.trigger("click") }, setCount(l) { s.find("span").data("count", l) }, pulse() { s.addClass("pulse") } })) }; u.on("socket.in.challenges", r => { o ? o.update(r) : i(r) }), u.on("challenge-app.open", () => s.trigger("click")) } { let o, n, s = $("#notify-toggle"), i = "#notify-app", r = c => { if (n) return; n = !0; let l = $("#notify-app").html(e); g("notify"), w("notify").then(() => { o = window.LichessNotify(l.empty()[0], { data: c, isVisible: () => t(i), updateUnread(d) { let p = s.find("span").data("count") || 0; return d == "increment" && (d = p + 1), s.find("span").data("count", this.isVisible() ? 0 : d), d && d != p }, show() { t(i) || s.trigger("click") }, setNotified() { lichess.socket.send("notified") }, pulse() { s.addClass("pulse") } }) }) }; s.one("mouseover click", () => r()).on("click", () => { "Notification" in window && Notification.requestPermission(), setTimeout(() => { o && t(i) && o.onShow() }, 200) }), u.on("socket.in.notifications", c => { o ? o.update(c) : r(c) }), u.on("notify-app.set-read", c => { o ? o.setMsgRead(c) : r() }) } $("#top .dasher .toggle").one("mouseover click", function () { $(this).removeAttr("href"), g("dasher"), vt() }); { let o = $("#clinput"); if (!o.length) return; let n = o.find("input"), s = !1, i = () => { s || (s = !0, w("cli").then(() => window.LichessCli.app(n[0]), () => s = !1)) }; n.on({ blur() { n.val(""), $("body").removeClass("clinput") }, focus() { i(), $("body").addClass("clinput") } }), o.find("a").on({ mouseover: i, click() { $("body").hasClass("clinput") ? n[0].blur() : n[0].focus() } }), window.Mousetrap.bind("/", () => { n.val("/"), n[0].focus() }).bind("s", () => n[0].focus()) } } var xt = "modal-overlay"; function f(e) { f.close(); let t = $(`<div id="modal-wrap"><span class="close" role="button" aria-label="Close" data-icon="${Me}" tabindex="0"></span></div>`), o = $(`<div id="${xt}" class="${e.class}">`); return e.noClickAway || o.on("click", f.close), $('<a href="#"></a>').appendTo(o), t.appendTo(o), $('<a href="#"></a>').appendTo(o), e.content.clone().removeClass("none").appendTo(t), e.onInsert && e.onInsert(t), f.onClose = e.onClose, t.find(".close,.cancel").each(function () { Wt(this, f.close) }), $("body").addClass("overlayed").prepend(o), Gt(t), t } f.close = () => { $("body").removeClass("overlayed"), $(`#${xt}`).each(function () { f.onClose && f.onClose(), $(this).remove() }), delete f.onClose }; f.onClose = void 0; var Wt = (e, t) => { e.addEventListener("click", t), e.addEventListener("keydown", o => o.code === "Enter" || o.code === "Space" ? t() : !0) }, Gt = e => { e.on("click", t => t.stopPropagation()), Kt(e) }, yt = 'button:not(:disabled), [href], input:not(:disabled):not([type="hidden"]), select:not(:disabled), textarea:not(:disabled), [tabindex="0"]'; function kt(e) { var t; let o = $("#modal-wrap")[0]; if (!o) return; let n = o.compareDocumentPosition(e.target); if (n & Node.DOCUMENT_POSITION_CONTAINED_BY) return; let s = $(o).find(yt), i = n & Node.DOCUMENT_POSITION_FOLLOWING ? 0 : s.length - 1; (t = s.get(i)) === null || t === void 0 || t.focus(), e.preventDefault() } var Kt = e => { let t = e.find(yt); setTimeout(() => { var o, n; return (n = (o = t[1]) !== null && o !== void 0 ? o : t[0]) === null || n === void 0 ? void 0 : n.focus() }) }; ft(); lichess.info = gt; lichess.load.then(() => { $("#user_tag").removeAttr("href"), requestAnimationFrame(() => { B(), R(), u.on("content-loaded", B), u.on("content-loaded", R), he(1e3), u.on("content-loaded", me) }), T(() => { let e = document.getElementById("friend_box"); e && new O(e); let t = document.querySelector(".chat__members"); if (t && _(t), $("#main-wrap").on("click", ".autoselect", function () { this.select() }).on("click", "button.copy", function () { let n = () => $(this).attr("data-icon", Se); return $("#" + $(this).data("rel")).each(function () { try { navigator.clipboard.writeText(this.value).then(n) } catch (s) { console.error(s) } }), !1 }), $("body").on("click", "a.relation-button", function () { let n = $(this).addClass("processing").css("opacity", .3); return b(this.href, { method: "post" }).then(s => { s.includes("relation-actions") ? n.parent().replaceWith(s) : n.replaceWith(s) }), !1 }), $(".mselect .button").on("click", function () { let n = $(this).parent(); n.toggleClass("shown"), T(() => { let s = i => { n[0].contains(i.target) || (n.removeClass("shown"), $("html").off("click", s)) }; $("html").on("click", s) }, 200) }), K.watchMouse(), setTimeout(() => { lichess.socket || (lichess.socket = new h("/socket/v5", !1)) }, 300), wt(), window.addEventListener("resize", () => document.body.dispatchEvent(new Event("chessground.resize"))), $(".user-autocomplete").each(function () { let n = !!this.autofocus, s = () => G().then(i => i({ input: this, friend: $(this).data("friend"), tag: $(this).data("tag"), focus: n })); n ? s() : $(this).one("focus", s) }), window.InfiniteScroll && window.InfiniteScroll(".infinite-scroll"), $("input.confirm, button.confirm").on("click", function () { return confirm(this.title || "Confirm this action?") }), $("#main-wrap").on("click", "a.bookmark", function () { let n = $(this).toggleClass("bookmarked"); b(this.href, { method: "post" }); let s = (parseInt(n.text(), 10) || 0) + (n.hasClass("bookmarked") ? 1 : -1); return n.find("span").html("" + (s > 0 ? s : "")), !1 }), $("body").on("focusin", kt), window.Mousetrap.bind("esc", () => { let n = $("#modal-wrap .close"); if (n.length) n.trigger("click"); else { let s = $(":focus"); s.length && s.trigger("blur") } }), navigator.userAgent.includes("Edge/") && setTimeout(() => { let n = document.getElementById("piece-sprite"); n.href = n.href.replace(".css", ".external.css") }, 1e3), J() && !("MSStream" in window)) { let n = document.querySelector("meta[name=viewport]"); n.setAttribute("content", n.getAttribute("content") + ",maximum-scale=1.0") } location.hash === "#blind" && !$("body").hasClass("blind-mode") && b("/toggle-blind-mode", { method: "post", body: Be({ enable: 1, redirect: "/" }) }).then(y); let o = document.body.getAttribute("data-announce"); o && H(JSON.parse(o)), et(), bt(), u.on("socket.in.redirect", n => { lichess.unload.expected = !0, lichess.redirect(n) }), u.on("socket.in.fen", n => document.querySelectorAll(".mini-game-" + n.id).forEach(s => le(s, n))), u.on("socket.in.finish", n => document.querySelectorAll(".mini-game-" + n.id).forEach(s => de(s, n.win))), u.on("socket.in.announce", H), u.on("socket.in.tournamentReminder", n => { if ($("#announce").length || $("body").data("tournament-id") == n.id) return; let s = "/tournament/" + n.id; $("body").append($('<div id="announce">').append($(`<a data-icon="${Ae}" class="text">`).attr("href", s).text(n.name)).append($('<div class="actions">').append($(`<a class="withdraw text" data-icon="${Le}">`).attr("href", s + "/withdraw").text(k("pause")).on("click", function () { return b(this.href, { method: "post" }), $("#announce").remove(), !1 })).append($(`<a class="text" data-icon="${$e}">`).attr("href", s).text(k("resume"))))) }) }, 800) });
})();
